<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- select_all_mentor_profiles() 메서드와 매핑될 SQL -->
<mapper namespace="com.ld.gg.dao.mentoringdao.MentorProfileDAO">

<select id="select_all_mentor_profiles" resultType="mentorProfile">
SELECT mp.*, m.*, si.*
FROM mentor_profile AS mp
JOIN member AS m ON mp.mentor_email = m.email
JOIN (
    SELECT si1.*
    FROM summoner_info si1
    JOIN (
        SELECT summoner_name, MAX(revision_date) AS MaxRevision
        FROM summoner_info
        GROUP BY summoner_name
    ) si2 ON si1.summoner_name = si2.summoner_name AND si1.revision_date = si2.MaxRevision
) si ON m.lol_account = si.summoner_name
WHERE mp.mentor_email = m.email;
</select>

<select id="ordered_mentor_profiles" resultType="mentorProfile">
SELECT mp.*, m.*, si.*
FROM mentor_profile AS mp
JOIN member AS m ON mp.mentor_email = m.email
JOIN (
    SELECT si1.*
    FROM summoner_info si1
    JOIN (
        SELECT summoner_name, MAX(revision_date) AS MaxRevision
        FROM summoner_info
        GROUP BY summoner_name
    ) si2 ON si1.summoner_name = si2.summoner_name AND si1.revision_date = si2.MaxRevision
) si ON m.lol_account = si.summoner_name
WHERE mp.mentor_email = m.email
ORDER BY ${order_keyword} DESC;
</select>

<select id="select_by_email_mentor_profile" resultType="mentorProfile">
SELECT mp.*, m.*, si.*
FROM mentor_profile AS mp
JOIN member AS m ON mp.mentor_email = m.email
JOIN (
    SELECT si1.*
    FROM summoner_info si1
    JOIN (
        SELECT summoner_name, MAX(revision_date) AS MaxRevision
        FROM summoner_info
        GROUP BY summoner_name
    ) si2 ON si1.summoner_name = si2.summoner_name AND si1.revision_date = si2.MaxRevision
) si ON m.lol_account = si.summoner_name
WHERE mentor_email = #{mentor_email};
</select>

<select id="findMentorsByTagIds" parameterType="Integer[]" resultType="mentorProfile">
    SELECT mp.*, m.*, si.*
	FROM mentor_profile AS mp
	JOIN member AS m ON mp.mentor_email = m.email
	JOIN (
	    SELECT si1.*
	    FROM summoner_info si1
	    JOIN (
	        SELECT summoner_name, MAX(revision_date) AS MaxRevision
	        FROM summoner_info
	        GROUP BY summoner_name
	    ) si2 ON si1.summoner_name = si2.summoner_name AND si1.revision_date = si2.MaxRevision
	) si ON m.lol_account = si.summoner_name
    WHERE mentor_email IN (
        SELECT mentor_email
        FROM mentor_tag
        WHERE tag_id IN
        <foreach item="tagId" collection="array" open="(" separator="," close=")">
            #{tagId}
        </foreach>
        GROUP BY mentor_email
        HAVING COUNT(DISTINCT tag_id) = ${array.length}
    );
</select>

<insert id="insert_mentor_profile" parameterType="String">
  INSERT INTO mentor_profile (mentor_email) VALUES (#{mentor_email});
</insert>

<insert id="renewal_mentor_profile">
  INSERT INTO mentor_profile (mentor_email)
  SELECT email FROM member
  WHERE member.user_type = 2 AND NOT EXISTS (
      SELECT 1 FROM mentor_profile WHERE mentor_profile.mentor_email = member.email
  );
</insert>

<update id="update_mentor_profile" parameterType="mentorProfile">
  UPDATE mentor_profile SET about_mentor = #{about_mentor}, specialized_position = #{specialized_position}, 
  top_specialized_champion = #{top_specialized_champion}, jg_specialized_champion = #{jg_specialized_champion},
  mid_specialized_champion = #{mid_specialized_champion},ad_specialized_champion = #{ad_specialized_champion},
  sup_specialized_champion = #{sup_specialized_champion}, contact_time = #{contact_time}, careers = #{careers}, 
  recom_ment = #{recom_ment} WHERE mentor_email = #{mentor_email};
</update>

<update id="update_mentor_profile_lessons" parameterType="mentorProfile">
  UPDATE mentor_profile SET num_of_lessons = #{num_of_lessons} WHERE mentor_email = #{mentor_email};
</update>

<update id="update_mentor_profile_reviews" parameterType="mentorProfile">
  UPDATE mentor_profile SET num_of_reviews = #{num_of_reviews} WHERE mentor_email = #{mentor_email};
</update>

<update id="update_mentor_profile_likes" parameterType="mentorProfile">
  UPDATE mentor_profile SET num_of_likes = #{num_of_likes} WHERE mentor_email = #{mentor_email};
</update>

<update id="update_mentor_profile_grade" parameterType="mentorProfile">
  UPDATE mentor_profile SET total_grade = #{total_grade} WHERE mentor_email = #{mentor_email};
</update>

<delete id="delete_mentor_profile" parameterType="String">
  DELETE FROM mentor_profile WHERE mentor_email = #{mentor_email};
</delete>



</mapper>